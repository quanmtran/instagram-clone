{"version":3,"sources":["fbase.js","components/UserPagePost.js","components/ProfileOptions.js","components/Header.js","components/UserInfo.js","components/UserPageContentNav.js","components/ListUserCard.js","components/UserList.js","routes/UserPage.js","routes/Auth.js","Functions.js","components/Comment.js","components/CommentInput.js","components/PostHeader.js","components/PostMoreOptions.js","components/Post.js","components/PostUpload.js","components/CurrentUserCard.js","routes/Home.js","components/ProfileImgOptions.js","routes/AccountEditPage.js","routes/PostPage.js","components/AppRouter.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","databaseService","getFirestore","userCollection","collection","postCollection","storageService","getStorage","DEFAULT_PROFILE_IMG_URL","UserPagePost","postObject","to","id","className","src","imgUrl","likedBy","length","comments","ProfileOptions","currentUserObject","username","onClick","signOut","Header","useState","isProfileOptionsDisplayed","setIsProfileOptionsDisplayed","prev","style","backgroundImage","profileImgUrl","UserInfo","userObject","postObjects","setUserList","toggleUserListDisplayed","followers","includes","userId","isCurrentUserFollowing","setIsCurrentUserFollowing","followerCount","setFollowerCount","isCurrentUserPageOwner","Boolean","handleFollowClick","a","userDocRef","doc","currentUserDocRef","updateDoc","arrayRemove","followings","arrayUnion","console","log","name","bio","listName","users","UserPageContentNav","ListUserCard","setUserObject","isUserDataReady","setIsUserDataReady","isCurrentUser","setIsCurrentUser","useEffect","getDoc","docSnap","userObj","data","UserList","userList","map","UserPage","isLoggedIn","isUserListDisplayed","setPostObjects","isLoading","setIsLoading","useParams","getUserId","q","query","where","orderBy","getDocs","querySnapshot","posts","docs","userDocSnap","Auth","isLoginState","setIsLoginState","emailInput","setEmailInput","passwordInput","setPasswordInput","usernameInput","setUsernameInput","fullnameInput","setFullnameInput","errorMessage","setErrorMessage","handleInputChange","e","target","value","handleSubmit","preventDefault","signInWithEmailAndPassword","createUserWithEmailAndPassword","userCredential","user","uid","setDoc","message","onSubmit","type","placeholder","onChange","required","getUsername","getTimeAgo","postedAt","timeDigit","timeUnit","MINUTES_MULTIPLIER","SECONDS_MULTIPLIER","HOURS_MULTIPLIER","DAYS_MULTIPLIER","alphaTime","Date","now","Math","floor","Comment","postDocRef","comment","setUsername","ownerUserId","handleDeleteClick","text","CommentInput","postId","currentUserId","commentText","setCommentText","handleCommentSubmit","trim","PostHeader","postOwnerObject","PostMoreOptions","handleEditToggle","handleDelete","handleMoreClick","isMoreOptionsDisplayed","Post","isEditting","setIsEditting","caption","editCaption","setEditCaption","setPostOwnerObject","setIsMoreOptionsDisplayed","isDoubleTapped","setIsDoubleTapped","history","useHistory","userStorageRef","ref","postLikedArray","likeCount","hasCurrentUserLiked","imgId","getPostOwnerData","postOwnerUserRef","handleEditSubmit","push","deleteDoc","deleteObject","handleLikeClick","handleDoubleTap","setTimeout","onDoubleClick","PostUpload","captionInput","setCaptionInput","setImgUrl","dragAndDropAreaRef","useRef","handlePostSubmit","uuidv4","imgStorageRef","uploadString","getDownloadURL","imgFirebaseUrl","addDoc","document","body","scrollTop","documentElement","accept","file","files","split","reader","FileReader","onload","result","readAsDataURL","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","CurrentUserCard","Home","isPageReady","setIsPageReady","followingArray","unsubscribe","onSnapshot","ProfileImgOptions","handleChangeProfileImgToggle","refreshCurrentUserObject","profileImgStorageRef","handleUploadProfileImg","handleRemoveCurrentProfileImg","AccountEdit","nameEdit","setNameEdit","bioEdit","setBioEdit","isSubmitted","setIsSubmitted","isProfileImgOptionsDisplayed","setIsProfileImgOptionsDisplayed","toggle","handleEditChange","htmlFor","PostPage","isPostDataReady","setIsPostDataReady","setPostObject","post","AppRouter","exact","path","App","isFirebaseReady","setIsFirebaseReady","setIsLoggedIn","setCurrentUserObject","setIsUserListDisplayed","userObjectFirestore","onAuthStateChanged","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0eee8a8.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore, collection } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: process.env.REACT_APP_API_KEY,\r\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\r\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n\tappId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Authorization\r\nexport const authService = getAuth(app);\r\n\r\n// Database\r\nexport const databaseService = getFirestore(app);\r\nexport const userCollection = collection(databaseService, 'users');\r\nexport const postCollection = collection(databaseService, 'posts');\r\n\r\n// Storage\r\nexport const storageService = getStorage(app);\r\nexport const DEFAULT_PROFILE_IMG_URL =\r\n\t'https://firebasestorage.googleapis.com/v0/b/instagram-clone-dcbd6.appspot.com/o/images%2Fdefault-profile-img.jpg?alt=media&token=db689368-579f-44b2-ab10-07ff8a2bd700';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function UserPagePost({ postObject }) {\r\n\treturn (\r\n\t\t<Link to={`/post/${postObject.id}`}>\r\n\t\t\t<div className=\"user-page-img-container\">\r\n\t\t\t\t<img src={postObject.imgUrl} />\r\n\t\t\t\t<div className=\"img-stats\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<i className=\"material-icons\">favorite</i>\r\n\t\t\t\t\t\t<div>{postObject.likedBy.length}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<i className=\"material-icons\">chat_bubble</i>\r\n\t\t\t\t\t\t<div>{postObject.comments.length}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { authService } from 'fbase';\r\nimport { signOut } from 'firebase/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ProfileOptions({ currentUserObject }) {\r\n\tconst handleLogOut = () => {\r\n\t\tsignOut(authService);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"profile-options\">\r\n\t\t\t<Link to={`/user/${currentUserObject.username}`}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"material-icons\">account_circle</span>Profile\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<Link to={`/account/edit`}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"material-icons\">settings</span>Settings\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"log-out-btn\" onClick={handleLogOut}>\r\n\t\t\t\tLog Out\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileOptions from './ProfileOptions';\r\n\r\nexport default function Header({ currentUserObject }) {\r\n\tconst [isProfileOptionsDisplayed, setIsProfileOptionsDisplayed] = useState(false);\r\n\r\n\tconst handleToggleProfileOptions = () => {\r\n\t\tsetIsProfileOptionsDisplayed((prev) => !prev);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className=\"header-container\">\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div className=\"insta-logo\">Isn'tagram</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"nav-container-header\">\r\n\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t<i className=\"material-icons\">home</i>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<i className=\"material-icons\">chat</i>\r\n\t\t\t\t\t<i className=\"material-icons\">explore</i>\r\n\t\t\t\t\t<i className=\"material-icons\">favorite</i>\r\n\t\t\t\t\t<div className=\"profile-img\" onClick={handleToggleProfileOptions} style={{ backgroundImage: `url(${currentUserObject.profileImgUrl})` }}>\r\n\t\t\t\t\t\t{isProfileOptionsDisplayed && <ProfileOptions currentUserObject={currentUserObject} />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { doc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\r\nimport { userCollection } from 'fbase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function UserInfo({ userObject, postObjects, currentUserObject, setUserList, toggleUserListDisplayed }) {\r\n\t// States\r\n\tconst [isCurrentUserFollowing, setIsCurrentUserFollowing] = useState(userObject.followers.includes(currentUserObject.userId));\r\n\tconst [followerCount, setFollowerCount] = useState(userObject.followers.length);\r\n\r\n\t// Constant\r\n\tconst isCurrentUserPageOwner = Boolean(currentUserObject.userId === userObject.userId);\r\n\r\n\t// Handlers\r\n\tconst handleFollowClick = async () => {\r\n\t\t// Firestore references\r\n\t\tconst userDocRef = doc(userCollection, userObject.userId);\r\n\t\tconst currentUserDocRef = doc(userCollection, currentUserObject.userId);\r\n\r\n\t\ttry {\r\n\t\t\tif (isCurrentUserFollowing) {\r\n\t\t\t\t// Remove current user's id from user's followers\r\n\t\t\t\tawait updateDoc(userDocRef, {\r\n\t\t\t\t\tfollowers: arrayRemove(currentUserObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Remove user's id from current user's followings\r\n\t\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\t\tfollowings: arrayRemove(userObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetFollowerCount((prev) => prev - 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Add current user's id to user's followers\r\n\t\t\t\tawait updateDoc(userDocRef, {\r\n\t\t\t\t\tfollowers: arrayUnion(currentUserObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add user's id to current user's followings\r\n\t\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\t\tfollowings: arrayUnion(userObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetFollowerCount((prev) => prev + 1);\r\n\t\t\t}\r\n\r\n\t\t\tsetIsCurrentUserFollowing((prev) => !prev);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleFollowerCountClick = () => {\r\n\t\tsetUserList({\r\n\t\t\tlistName: 'Followers',\r\n\t\t\tusers: userObject.followers,\r\n\t\t});\r\n\t\ttoggleUserListDisplayed();\r\n\t};\r\n\r\n\tconst handleFollowingCountClick = () => {\r\n\t\tsetUserList({\r\n\t\t\tlistName: 'Following',\r\n\t\t\tusers: userObject.followings,\r\n\t\t});\r\n\t\ttoggleUserListDisplayed();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"user-info\">\r\n\t\t\t<div className=\"profile-img-container\">\r\n\t\t\t\t<div className=\"profile-img\" style={{ backgroundImage: `url(${userObject.profileImgUrl})` }}></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"username-and-btns\">\r\n\t\t\t\t<div className=\"username\">{userObject.username}</div>\r\n\t\t\t\t{isCurrentUserPageOwner ? (\r\n\t\t\t\t\t<Link to={`/account/edit`}>\r\n\t\t\t\t\t\t<div className=\"account-interactive-btn edit-profile-btn\">Edit Profile</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div onClick={handleFollowClick} className={`account-interactive-btn follow-btn ${isCurrentUserFollowing && 'following'}`}>\r\n\t\t\t\t\t\tFollow{isCurrentUserFollowing && 'ing'}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bio\">\r\n\t\t\t\t<div className=\"bio-name\">{userObject.name}</div>\r\n\t\t\t\t<div className=\"bio-text\">{userObject.bio}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"stats\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span>{postObjects.length}</span>\r\n\t\t\t\t\tpost{postObjects.length > 1 && 's'}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={handleFollowerCountClick}>\r\n\t\t\t\t\t<span>{followerCount}</span>\r\n\t\t\t\t\tfollower{userObject.followers.length > 1 && 's'}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div onClick={handleFollowingCountClick}>\r\n\t\t\t\t\t<span>{userObject.followings.length}</span>\r\n\t\t\t\t\tfollowing\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function UserPageContentNav() {\r\n\treturn (\r\n\t\t<div className=\"nav-container-content\">\r\n\t\t\t<div>\r\n\t\t\t\t<i className=\"material-icons\">grid_on</i>\r\n\t\t\t\t<div>posts</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<i className=\"material-icons\">movie</i>\r\n\t\t\t\t<div>reels</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<i className=\"material-icons\">live_tv</i>\r\n\t\t\t\t<div>igtv</div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<i className=\"material-icons\">assignment_ind</i>\r\n\t\t\t\t<div>tagged</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { userCollection } from 'fbase';\r\nimport { doc, getDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\r\n\r\nexport default function ListUserCard({ userId, toggleUserListDisplayed, currentUserObject }) {\r\n\tconst [userObject, setUserObject] = useState({});\r\n\tconst [isUserDataReady, setIsUserDataReady] = useState(false);\r\n\tconst [isCurrentUser, setIsCurrentUser] = useState(null);\r\n\tconst [isCurrentUserFollowing, setIsCurrentUserFollowing] = useState(null);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst docSnap = await getDoc(doc(userCollection, userId));\r\n\t\tconst userObj = docSnap.data();\r\n\t\tsetUserObject(userObj);\r\n\t\tsetIsCurrentUser(userObj.userId === currentUserObject.userId);\r\n\t\tsetIsCurrentUserFollowing(userObj.followers.includes(currentUserObject.userId));\r\n\t\tsetIsUserDataReady(true);\r\n\t}, []);\r\n\r\n\t// Handlers\r\n\tconst handleFollowClick = async () => {\r\n\t\tconst userDocRef = doc(userCollection, userObject.userId);\r\n\t\tconst currentUserDocRef = doc(userCollection, currentUserObject.userId);\r\n\r\n\t\ttry {\r\n\t\t\tif (isCurrentUserFollowing) {\r\n\t\t\t\t// Remove current user's id from user's followers\r\n\t\t\t\tawait updateDoc(userDocRef, {\r\n\t\t\t\t\tfollowers: arrayRemove(currentUserObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Remove user's id from current user's followings\r\n\t\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\t\tfollowings: arrayRemove(userObject.userId),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Add current user's id to user's followers\r\n\t\t\t\tawait updateDoc(userDocRef, {\r\n\t\t\t\t\tfollowers: arrayUnion(currentUserObject.userId),\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add user's id to current user's followings\r\n\t\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\t\tfollowings: arrayUnion(userObject.userId),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tsetIsCurrentUserFollowing((prev) => !prev);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn isUserDataReady ? (\r\n\t\t<div className=\"user-card\">\r\n\t\t\t<div className=\"user-card-profile-img-and-name\">\r\n\t\t\t\t<Link to={`/user/${userObject.username}`} onClick={toggleUserListDisplayed}>\r\n\t\t\t\t\t<div className=\"profile-img\" style={{ backgroundImage: `url(${userObject.profileImgUrl})` }}></div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to={`/user/${userObject.username}`} onClick={toggleUserListDisplayed}>\r\n\t\t\t\t\t\t<span className=\"username\">{userObject.username}</span>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span className=\"name\">{userObject.name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{!isCurrentUser && (\r\n\t\t\t\t<div className={`follow-btn ${isCurrentUserFollowing ? 'following' : ''}`} onClick={handleFollowClick}>\r\n\t\t\t\t\tFollow{isCurrentUserFollowing ? 'ing' : ''}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t) : null;\r\n}\r\n","import React from 'react';\r\nimport ListUserCard from './ListUserCard';\r\n\r\nexport default function UserList({ toggleUserListDisplayed, userList, currentUserObject }) {\r\n\treturn (\r\n\t\t<div className=\"user-list-page\">\r\n\t\t\t<div className=\"user-list-container\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{userList.listName}\r\n\t\t\t\t\t<span className=\"material-icons\" onClick={toggleUserListDisplayed}>\r\n\t\t\t\t\t\tclose\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{userList.users.map((userId) => (\r\n\t\t\t\t\t\t<ListUserCard key={userId} userId={userId} toggleUserListDisplayed={toggleUserListDisplayed} currentUserObject={currentUserObject} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { postCollection, userCollection } from 'fbase';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { doc, getDoc, query, getDocs, where, orderBy } from 'firebase/firestore';\r\n\r\n// Import components\r\nimport UserPagePost from 'components/UserPagePost';\r\nimport Header from 'components/Header';\r\nimport UserInfo from 'components/UserInfo';\r\nimport UserPageContentNav from 'components/UserPageContentNav';\r\nimport UserList from 'components/UserList';\r\n\r\nexport default function UserPage({ isLoggedIn, currentUserObject, userList, setUserList, isUserListDisplayed, toggleUserListDisplayed }) {\r\n\t// States\r\n\tconst [postObjects, setPostObjects] = useState([]);\r\n\tconst [userObject, setUserObject] = useState({});\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\t// Constants\r\n\tconst username = useParams().username;\r\n\r\n\tuseEffect(async () => {\r\n\t\tsetIsLoading(true);\r\n\r\n\t\tconst userId = await getUserId(username);\r\n\r\n\t\t// Get user posts\r\n\t\tconst q = query(postCollection, where('ownerUserId', '==', userId), orderBy('postedAt', 'desc'));\r\n\t\tconst querySnapshot = await getDocs(q);\r\n\t\tconst posts = querySnapshot.docs.map((doc) => ({\r\n\t\t\tid: doc.id,\r\n\t\t\t...doc.data(),\r\n\t\t}));\r\n\r\n\t\tsetPostObjects(posts);\r\n\r\n\t\t// Get user data\r\n\t\tconst userDocSnap = await getDoc(doc(userCollection, `${userId}`));\r\n\t\tsetUserObject(userDocSnap.data());\r\n\r\n\t\tsetIsLoading(false);\r\n\t}, [username]);\r\n\r\n\tconst getUserId = async (username) => {\r\n\t\ttry {\r\n\t\t\tconst q = query(userCollection, where('username', '==', username));\r\n\t\t\tconst querySnapshot = await getDocs(q);\r\n\r\n\t\t\treturn querySnapshot.docs[0].data().userId;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoggedIn ? (\r\n\t\t<>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t'Loading...'\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header currentUserObject={currentUserObject} />\r\n\t\t\t\t\t<div className=\"user-page-container\">\r\n\t\t\t\t\t\t<UserInfo\r\n\t\t\t\t\t\t\tuserObject={userObject}\r\n\t\t\t\t\t\t\tpostObjects={postObjects}\r\n\t\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<UserPageContentNav />\r\n\t\t\t\t\t\t\t<div className=\"content-container\">\r\n\t\t\t\t\t\t\t\t{postObjects.map((postObject) => (\r\n\t\t\t\t\t\t\t\t\t<UserPagePost key={postObject.id} postObject={postObject} currentUserObject={currentUserObject} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isUserListDisplayed && (\r\n\t\t\t\t\t\t<UserList toggleUserListDisplayed={toggleUserListDisplayed} userList={userList} currentUserObject={currentUserObject} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t) : (\r\n\t\t<Redirect to=\"/\" />\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { authService, userCollection, DEFAULT_PROFILE_IMG_URL } from 'fbase';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function Auth({ isLoggedIn }) {\r\n\t// States\r\n\tconst [isLoginState, setIsLoginState] = useState(true);\r\n\tconst [emailInput, setEmailInput] = useState('');\r\n\tconst [passwordInput, setPasswordInput] = useState('');\r\n\tconst [usernameInput, setUsernameInput] = useState('');\r\n\tconst [fullnameInput, setFullnameInput] = useState('');\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\r\n\tconst newAccountToggle = () => {\r\n\t\tsetIsLoginState((prev) => !prev);\r\n\t\tsetEmailInput('');\r\n\t\tsetPasswordInput('');\r\n\t\tsetUsernameInput('');\r\n\t\tsetFullnameInput('');\r\n\t\tsetErrorMessage('');\r\n\t};\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tconst {\r\n\t\t\ttarget: { name, value },\r\n\t\t} = e;\r\n\r\n\t\tsetErrorMessage('');\r\n\r\n\t\tswitch (name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetEmailInput(value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetPasswordInput(value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fullname':\r\n\t\t\t\tsetFullnameInput(value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'username':\r\n\t\t\t\tsetUsernameInput(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tif (isLoginState) {\r\n\t\t\t\tawait signInWithEmailAndPassword(authService, emailInput, passwordInput);\r\n\t\t\t} else {\r\n\t\t\t\tconst userCredential = await createUserWithEmailAndPassword(authService, emailInput, passwordInput);\r\n\r\n\t\t\t\tconst userId = userCredential.user.uid;\r\n\t\t\t\tconst userObject = {\r\n\t\t\t\t\tuserId: userId,\r\n\t\t\t\t\tusername: usernameInput,\r\n\t\t\t\t\tprofileImgUrl: DEFAULT_PROFILE_IMG_URL,\r\n\t\t\t\t\tname: fullnameInput,\r\n\t\t\t\t\tbio: '',\r\n\t\t\t\t\tfollowers: [],\r\n\t\t\t\t\tfollowings: [],\r\n\t\t\t\t};\r\n\r\n\t\t\t\tawait setDoc(doc(userCollection, userId), userObject);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tsetErrorMessage(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoggedIn ? (\r\n\t\t<Redirect to=\"/home\" />\r\n\t) : (\r\n\t\t<div className=\"auth-page\">\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"insta-logo\">Isn'tagram</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input name=\"email\" type=\"text\" value={emailInput} placeholder=\"Email\" onChange={handleInputChange} required />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input name=\"password\" type=\"password\" value={passwordInput} placeholder=\"Password\" onChange={handleInputChange} required />\r\n\t\t\t\t</div>\r\n\t\t\t\t{!isLoginState && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input name=\"fullname\" type=\"text\" value={fullnameInput} placeholder=\"Full Name\" onChange={handleInputChange} required />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input name=\"username\" type=\"text\" value={usernameInput} placeholder=\"Username\" onChange={handleInputChange} required />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"submit\" value={isLoginState ? 'Log in' : 'Sign up'} />\r\n\t\t\t\t\t{errorMessage}\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t\t<div>\r\n\t\t\t\t{isLoginState ? \"Don't have an account?\" : 'Have an account?'}\r\n\t\t\t\t<span onClick={newAccountToggle}>{isLoginState ? ' Sign up' : ' Log in'}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { doc, getDoc } from 'firebase/firestore';\r\nimport { userCollection } from 'fbase';\r\n\r\nexport const getUsername = async (userId) => {\r\n\tconst docSnap = await getDoc(doc(userCollection, userId));\r\n\treturn docSnap.data().username;\r\n};\r\n\r\nexport const getTimeAgo = (postedAt) => {\r\n\tconst SECONDS_MULTIPLIER = 1000;\r\n\tconst MINUTES_MULTIPLIER = SECONDS_MULTIPLIER * 60;\r\n\tconst HOURS_MULTIPLIER = MINUTES_MULTIPLIER * 60;\r\n\tconst DAYS_MULTIPLIER = HOURS_MULTIPLIER * 24;\r\n\r\n\tconst alphaTime = Date.now() - postedAt;\r\n\tlet timeDigit;\r\n\tlet timeUnit;\r\n\tif (alphaTime / DAYS_MULTIPLIER >= 1) {\r\n\t\ttimeDigit = `${Math.floor(alphaTime / DAYS_MULTIPLIER)}`;\r\n\t\ttimeUnit = 'DAY';\r\n\t} else if (alphaTime / HOURS_MULTIPLIER >= 1) {\r\n\t\ttimeDigit = `${Math.floor(alphaTime / HOURS_MULTIPLIER)}`;\r\n\t\ttimeUnit = 'HOUR';\r\n\t} else if (alphaTime / MINUTES_MULTIPLIER >= 1) {\r\n\t\ttimeDigit = `${Math.floor(alphaTime / MINUTES_MULTIPLIER)}`;\r\n\t\ttimeUnit = 'MINUTE';\r\n\t} else {\r\n\t\ttimeDigit = `${Math.floor(alphaTime / SECONDS_MULTIPLIER)}`;\r\n\t\ttimeUnit = 'SECOND';\r\n\t}\r\n\r\n\treturn `${timeDigit} ${timeUnit}${timeDigit > 1 ? 'S' : ''} AGO`;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { updateDoc, arrayRemove } from 'firebase/firestore';\r\nimport { getUsername } from 'Functions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Comment({ postDocRef, postObject, comment, currentUserObject }) {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst name = await getUsername(comment.ownerUserId);\r\n\t\tsetUsername(name);\r\n\t\tsetIsLoading(false);\r\n\t}, []);\r\n\r\n\tconst handleDeleteClick = async () => {\r\n\t\tawait updateDoc(postDocRef, {\r\n\t\t\tcomments: arrayRemove(comment),\r\n\t\t});\r\n\t};\r\n\r\n\treturn isLoading ? (\r\n\t\t<div></div>\r\n\t) : (\r\n\t\t<div className=\"comment\">\r\n\t\t\t<div className=\"username-and-text\">\r\n\t\t\t\t<span className=\"username\">\r\n\t\t\t\t\t<Link to={`/user/${username}`}>{username}</Link>\r\n\t\t\t\t</span>{' '}\r\n\t\t\t\t<span>{comment.text}</span>\r\n\t\t\t</div>\r\n\t\t\t{(currentUserObject.userId === comment.ownerUserId || currentUserObject.userId === postObject.ownerUserId) && (\r\n\t\t\t\t<span className=\"material-icons delete-comment-btn\" onClick={handleDeleteClick}>\r\n\t\t\t\t\tclear\r\n\t\t\t\t</span>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { updateDoc, arrayUnion } from 'firebase/firestore';\r\n\r\nexport default function CommentInput({ postId, currentUserId, postDocRef }) {\r\n\t// States\r\n\tconst [commentText, setCommentText] = useState('');\r\n\r\n\t// Handlers\r\n\tconst handleCommentChange = (e) => {\r\n\t\tsetCommentText(e.target.value);\r\n\t};\r\n\r\n\tconst handleCommentSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (commentText.trim() === '') return;\r\n\r\n\t\tconst comment = {\r\n\t\t\tid: `${postId}-${currentUserId}-${Date.now()}`,\r\n\t\t\townerUserId: currentUserId,\r\n\t\t\tpostedAt: Date.now(),\r\n\t\t\ttext: commentText,\r\n\t\t};\r\n\r\n\t\tawait updateDoc(postDocRef, {\r\n\t\t\tcomments: arrayUnion(comment),\r\n\t\t});\r\n\r\n\t\tsetCommentText('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"comment-input-container\" onSubmit={handleCommentSubmit}>\r\n\t\t\t<input placeholder=\"Add a comment...\" value={commentText} onChange={handleCommentChange} />\r\n\t\t\t<input type=\"submit\" value=\"Post\" className={commentText.trim() ? 'active' : ''} />\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PostHeader({ postOwnerObject }) {\r\n\treturn (\r\n\t\t<div className=\"post-header\">\r\n\t\t\t<Link to={`/user/${postOwnerObject.username}`}>\r\n\t\t\t\t<div className=\"profile-img\" style={{ backgroundImage: `url(${postOwnerObject.profileImgUrl})` }} />\r\n\t\t\t</Link>\r\n\r\n\t\t\t<Link to={`/user/${postOwnerObject.username}`}>\r\n\t\t\t\t<div className=\"username\">{postOwnerObject.username}</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function PostMoreOptions({ handleEditToggle, handleDelete, handleMoreClick, isMoreOptionsDisplayed }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<span className=\"material-icons post-more-btn\" onClick={handleMoreClick}>\r\n\t\t\t\tmore_horiz\r\n\t\t\t</span>\r\n\t\t\t{isMoreOptionsDisplayed && (\r\n\t\t\t\t<div className=\"post-more-options\">\r\n\t\t\t\t\t<button onClick={handleEditToggle}>Edit</button>\r\n\t\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { doc, getDoc, deleteDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\r\nimport { storageService, postCollection, userCollection } from 'fbase';\r\nimport { ref, deleteObject } from 'firebase/storage';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// Import functions\r\nimport { getTimeAgo } from 'Functions';\r\n\r\n// Import components\r\nimport Comment from './Comment';\r\nimport CommentInput from './CommentInput';\r\nimport PostHeader from './PostHeader';\r\nimport PostMoreOptions from './PostMoreOptions';\r\n\r\nexport default function Post({ postObject, currentUserObject, toggleUserListDisplayed, setUserList }) {\r\n\t// States\r\n\tconst [isEditting, setIsEditting] = useState(false);\r\n\tconst [editCaption, setEditCaption] = useState(postObject.caption);\r\n\tconst [postOwnerObject, setPostOwnerObject] = useState({});\r\n\tconst [isMoreOptionsDisplayed, setIsMoreOptionsDisplayed] = useState(false);\r\n\tconst [isDoubleTapped, setIsDoubleTapped] = useState(false);\r\n\tconst history = useHistory();\r\n\r\n\t// Firebase database references\r\n\tconst postDocRef = doc(postCollection, postObject.id);\r\n\r\n\t// Firebase storage references\r\n\tconst userStorageRef = ref(storageService, `${postObject.ownerUserId}`);\r\n\r\n\t// Constants\r\n\tconst postLikedArray = postObject.likedBy;\r\n\tconst likeCount = postLikedArray.length;\r\n\tconst currentUserId = currentUserObject.userId;\r\n\tconst hasCurrentUserLiked = postLikedArray.includes(currentUserId);\r\n\tconst imgId = postObject.imgId;\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPostOwnerData();\r\n\t}, []);\r\n\r\n\tconst getPostOwnerData = async () => {\r\n\t\tconst postOwnerUserRef = doc(userCollection, postObject.ownerUserId);\r\n\t\tconst userDocSnap = await getDoc(postOwnerUserRef);\r\n\r\n\t\tsetPostOwnerObject(userDocSnap.data());\r\n\t};\r\n\r\n\t// Handlers\r\n\tconst handleEditCaptionChange = (e) => {\r\n\t\tsetEditCaption(e.target.value);\r\n\t};\r\n\r\n\tconst handleEditSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tawait updateDoc(postDocRef, {\r\n\t\t\tcaption: editCaption,\r\n\t\t});\r\n\r\n\t\tsetIsEditting(false);\r\n\t};\r\n\r\n\tconst handleEditToggle = () => {\r\n\t\tsetIsEditting((prev) => !prev);\r\n\t\tsetIsMoreOptionsDisplayed(false);\r\n\t\tsetEditCaption(postObject.caption);\r\n\t};\r\n\r\n\tconst handleDelete = async () => {\r\n\t\ttry {\r\n\t\t\thistory.push('/');\r\n\r\n\t\t\tawait deleteDoc(doc(postCollection, `${postObject.id}`));\r\n\r\n\t\t\tif (imgId) {\r\n\t\t\t\tawait deleteObject(ref(userStorageRef, imgId));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLikeClick = async () => {\r\n\t\ttry {\r\n\t\t\tif (hasCurrentUserLiked) {\r\n\t\t\t\tawait updateDoc(postDocRef, {\r\n\t\t\t\t\tlikedBy: arrayRemove(currentUserId),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tawait updateDoc(postDocRef, {\r\n\t\t\t\t\tlikedBy: arrayUnion(currentUserId),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDoubleTap = async () => {\r\n\t\tsetIsDoubleTapped(true);\r\n\r\n\t\tsetTimeout(() => setIsDoubleTapped(false), 1000);\r\n\r\n\t\ttry {\r\n\t\t\tawait updateDoc(postDocRef, {\r\n\t\t\t\tlikedBy: arrayUnion(currentUserId),\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleMoreClick = () => {\r\n\t\tsetIsMoreOptionsDisplayed((prev) => !prev);\r\n\t};\r\n\r\n\tconst handleLikeListClick = () => {\r\n\t\tsetUserList({\r\n\t\t\tlistName: 'Likes',\r\n\t\t\tusers: postObject.likedBy,\r\n\t\t});\r\n\t\ttoggleUserListDisplayed();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"post-container\">\r\n\t\t\t<PostHeader postOwnerObject={postOwnerObject} />\r\n\r\n\t\t\t<div className=\"post-img\" onDoubleClick={handleDoubleTap}>\r\n\t\t\t\t<img src={postObject.imgUrl} />\r\n\t\t\t\t{isDoubleTapped && <span className=\"material-icons\">favorite</span>}\r\n\t\t\t</div>\r\n\r\n\t\t\t{isEditting ? (\r\n\t\t\t\t<form onSubmit={handleEditSubmit} className=\"post-edit-form\">\r\n\t\t\t\t\t<input type=\"text\" value={editCaption} placeholder=\"Edit caption...\" onChange={handleEditCaptionChange} />\r\n\t\t\t\t\t<input type=\"button\" value=\"Cancel\" onClick={handleEditToggle} />\r\n\t\t\t\t\t<input type=\"submit\" value=\"Save\" />\r\n\t\t\t\t</form>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"post-interactive-btns\">\r\n\t\t\t\t\t\t<span className={`material-icons like-btn ${hasCurrentUserLiked ? 'liked' : ''}`} onClick={handleLikeClick}>\r\n\t\t\t\t\t\t\t{`favorite${hasCurrentUserLiked ? '' : '_border'}`}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{currentUserObject.userId === postObject.ownerUserId && (\r\n\t\t\t\t\t\t\t<PostMoreOptions\r\n\t\t\t\t\t\t\t\thandleEditToggle={handleEditToggle}\r\n\t\t\t\t\t\t\t\thandleDelete={handleDelete}\r\n\t\t\t\t\t\t\t\thandleMoreClick={handleMoreClick}\r\n\t\t\t\t\t\t\t\tisMoreOptionsDisplayed={isMoreOptionsDisplayed}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"post-like-count\">\r\n\t\t\t\t\t\t{likeCount ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\tLiked by&nbsp;\r\n\t\t\t\t\t\t\t\t<span onClick={handleLikeListClick}>\r\n\t\t\t\t\t\t\t\t\t{likeCount} {likeCount === 1 ? 'person' : 'people'}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t.\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t'Be the first person to like this post.'\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"post-caption-and-comments\">\r\n\t\t\t\t\t\t{postObject.caption && (\r\n\t\t\t\t\t\t\t<div className=\"post-caption\">\r\n\t\t\t\t\t\t\t\t<span className=\"username\">\r\n\t\t\t\t\t\t\t\t\t<Link to={`/user/${postOwnerObject.username}`}>{postOwnerObject.username}</Link>\r\n\t\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\t\t{postObject.caption}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{postObject.comments.map((comment) => (\r\n\t\t\t\t\t\t\t<Comment key={comment.id} postDocRef={postDocRef} postObject={postObject} comment={comment} currentUserObject={currentUserObject} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"posted-at\">{getTimeAgo(postObject.postedAt)}</div>\r\n\r\n\t\t\t\t\t<CommentInput postId={postObject.id} currentUserId={currentUserId} postDocRef={postDocRef} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { storageService, postCollection } from 'fbase';\r\nimport { addDoc } from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Import components\r\n\r\nexport default function PostUpload({ currentUserObject }) {\r\n\t// States\r\n\tconst [captionInput, setCaptionInput] = useState('');\r\n\tconst [imgUrl, setImgUrl] = useState('');\r\n\tconst dragAndDropAreaRef = useRef(null);\r\n\r\n\t// Handlers\r\n\tconst handleCaptionInputChange = (e) => {\r\n\t\tsetCaptionInput(e.target.value);\r\n\t};\r\n\r\n\tconst handleFileChange = (e) => {\r\n\t\tsetImgUrl(null);\r\n\r\n\t\tconst file = e.target.files[0];\r\n\t\tif (file && file.type.split('/')[0] === 'image') {\r\n\t\t\tconst reader = new FileReader();\r\n\r\n\t\t\treader.onload = () => {\r\n\t\t\t\tsetImgUrl(reader.result);\r\n\t\t\t};\r\n\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleCancelImg = () => {\r\n\t\tsetImgUrl('');\r\n\t};\r\n\r\n\tconst handlePostSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tif (imgUrl) {\r\n\t\t\t\t// Generate random ID\r\n\t\t\t\tconst imgId = uuidv4();\r\n\r\n\t\t\t\t// Create a reference in Storage Service\r\n\t\t\t\tconst userStorageRef = ref(storageService, `${currentUserObject.userId}`);\r\n\t\t\t\tconst imgStorageRef = ref(userStorageRef, imgId);\r\n\r\n\t\t\t\t// Upload image to Storage\r\n\t\t\t\tawait uploadString(imgStorageRef, imgUrl, 'data_url');\r\n\r\n\t\t\t\t// Get image URL in Storage Service\r\n\t\t\t\tconst imgFirebaseUrl = await getDownloadURL(imgStorageRef);\r\n\r\n\t\t\t\t// Add post's data as an object to Post collection in Database Service\r\n\t\t\t\tconst postObject = {\r\n\t\t\t\t\tcaption: captionInput,\r\n\t\t\t\t\tpostedAt: Date.now(),\r\n\t\t\t\t\townerUserId: currentUserObject.userId,\r\n\t\t\t\t\timgId: imgId,\r\n\t\t\t\t\timgUrl: imgFirebaseUrl,\r\n\t\t\t\t\tlikedBy: [],\r\n\t\t\t\t\tcomments: [],\r\n\t\t\t\t};\r\n\r\n\t\t\t\tawait addDoc(postCollection, postObject);\r\n\r\n\t\t\t\t// Clear inputs\r\n\t\t\t\tsetCaptionInput('');\r\n\t\t\t\tsetImgUrl('');\r\n\r\n\t\t\t\t// Scroll to the top of the page\r\n\t\t\t\tdocument.body.scrollTop = document.documentElement.scrollTop = 0;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDragEnter = () => {\r\n\t\tdragAndDropAreaRef.current.classList.add('dragover');\r\n\t};\r\n\r\n\tconst handleDragLeave = () => {\r\n\t\tdragAndDropAreaRef.current.classList.remove('dragover');\r\n\t};\r\n\r\n\tconst handleDrop = () => {\r\n\t\tdragAndDropAreaRef.current.classList.remove('dragover');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handlePostSubmit} className=\"post-upload-form\">\r\n\t\t\t<div className=\"drag-and-drop-container\">\r\n\t\t\t\t{imgUrl ? (\r\n\t\t\t\t\t<div className=\"image-preview\" style={{ backgroundImage: `url(${imgUrl})` }}>\r\n\t\t\t\t\t\t<span className=\"material-icons\" onClick={handleCancelImg}>\r\n\t\t\t\t\t\t\tcancel\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div ref={dragAndDropAreaRef} className=\"drag-and-drop-area\">\r\n\t\t\t\t\t\t<span>Add a photo</span>\r\n\t\t\t\t\t\t<span>or drag and drop</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\tonChange={handleFileChange}\r\n\t\t\t\t\t\t\tonDragEnter={handleDragEnter}\r\n\t\t\t\t\t\t\tonDragLeave={handleDragLeave}\r\n\t\t\t\t\t\t\tonDrop={handleDrop}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{imgUrl && <textarea placeholder=\"Write a caption...\" value={captionInput} onChange={handleCaptionInputChange} />}\r\n\t\t\t<input type=\"submit\" value=\"Post\" className={imgUrl ? 'active' : ''} />\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\n// Import components\r\nimport PostHeader from './PostHeader';\r\nimport PostUpload from './PostUpload';\r\n\r\nexport default function CurrentUserCard({ currentUserObject }) {\r\n\treturn (\r\n\t\t<div className=\"current-user-card\">\r\n\t\t\t<PostHeader postOwnerObject={currentUserObject} />\r\n\t\t\t<PostUpload currentUserObject={currentUserObject} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { postCollection } from 'fbase';\r\nimport { query, onSnapshot, where, orderBy } from 'firebase/firestore';\r\n\r\n// Import components\r\nimport Post from 'components/Post';\r\nimport Header from 'components/Header';\r\nimport CurrentUserCard from 'components/CurrentUserCard';\r\nimport UserList from 'components/UserList';\r\n\r\nexport default function Home({ isLoggedIn, currentUserObject, userList, setUserList, isUserListDisplayed, toggleUserListDisplayed }) {\r\n\tconst [postObjects, setPostObjects] = useState([]);\r\n\tconst [isPageReady, setIsPageReady] = useState(false);\r\n\r\n\t// Array of user Ids that current user follows (includes his/her user Id)\r\n\tconst followingArray = [currentUserObject.userId, ...currentUserObject.followings];\r\n\r\n\t// Get all posts on component mount\r\n\tuseEffect(() => {\r\n\t\tlet q;\r\n\r\n\t\t// Firestore's query limitation: 'in' query only supports array with length of 10 max\r\n\t\tif (followingArray.length > 10) {\r\n\t\t\tq = query(postCollection, orderBy('postedAt', 'desc'));\r\n\t\t} else {\r\n\t\t\tq = query(postCollection, where('ownerUserId', 'in', followingArray), orderBy('postedAt', 'desc'));\r\n\t\t}\r\n\t\tconst unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n\t\t\tconst posts = querySnapshot.docs.map((doc) => ({\r\n\t\t\t\tid: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t}));\r\n\r\n\t\t\tsetPostObjects(posts);\r\n\t\t\tsetIsPageReady(true);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn isLoggedIn ? (\r\n\t\t<>\r\n\t\t\t{isPageReady ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header currentUserObject={currentUserObject} />\r\n\t\t\t\t\t<div className=\"homepage-container\">\r\n\t\t\t\t\t\t<CurrentUserCard currentUserObject={currentUserObject} />\r\n\t\t\t\t\t\t<div className=\"homepage-content\">\r\n\t\t\t\t\t\t\t{postObjects.map((postObject) => (\r\n\t\t\t\t\t\t\t\t<Post\r\n\t\t\t\t\t\t\t\t\tkey={postObject.id}\r\n\t\t\t\t\t\t\t\t\tpostObject={postObject}\r\n\t\t\t\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isUserListDisplayed && (\r\n\t\t\t\t\t\t<UserList toggleUserListDisplayed={toggleUserListDisplayed} userList={userList} currentUserObject={currentUserObject} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t'Loading...'\r\n\t\t\t)}\r\n\t\t</>\r\n\t) : (\r\n\t\t<Redirect to=\"/\" />\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { DEFAULT_PROFILE_IMG_URL, storageService } from 'fbase';\r\nimport { updateDoc } from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL } from 'firebase/storage';\r\n\r\nexport default function ProfileImgOptions({ handleChangeProfileImgToggle, currentUserDocRef, refreshCurrentUserObject, currentUserObject }) {\r\n\t// Constants\r\n\tconst userStorageRef = ref(storageService, `${currentUserObject.userId}`);\r\n\tconst profileImgStorageRef = ref(userStorageRef, 'profile_img');\r\n\r\n\t// Handlers\r\n\tconst handleUploadProfileImg = async (e) => {\r\n\t\thandleChangeProfileImgToggle();\r\n\r\n\t\tconst file = e.target.files[0];\r\n\r\n\t\tif (file) {\r\n\t\t\tconst reader = new FileReader();\r\n\r\n\t\t\treader.onload = async () => {\r\n\t\t\t\tconst imgUrl = reader.result;\r\n\r\n\t\t\t\t// Upload img to Storage Service\r\n\t\t\t\tawait uploadString(profileImgStorageRef, imgUrl, 'data_url');\r\n\r\n\t\t\t\t// Get img URL from Storage Service\r\n\t\t\t\tconst imgFirebaseUrl = await getDownloadURL(profileImgStorageRef);\r\n\r\n\t\t\t\t// Update User object in Database Service\r\n\t\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\t\tprofileImgUrl: imgFirebaseUrl,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait refreshCurrentUserObject(currentUserObject.userId);\r\n\t\t\t};\r\n\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleRemoveCurrentProfileImg = async () => {\r\n\t\thandleChangeProfileImgToggle();\r\n\r\n\t\t// Update User object in Database Service\r\n\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\tprofileImgUrl: DEFAULT_PROFILE_IMG_URL,\r\n\t\t});\r\n\r\n\t\tawait refreshCurrentUserObject(currentUserObject.userId);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"profile-img-options-page\">\r\n\t\t\t<div className=\"profile-img-options-container\">\r\n\t\t\t\t<div>Change Profile Photo</div>\r\n\t\t\t\t<div className=\"upload-img-btn\">\r\n\t\t\t\t\t<label className=\"color-blue text-bold clickable\">\r\n\t\t\t\t\t\tUpload Photo\r\n\t\t\t\t\t\t<input type=\"file\" accept=\"image/*\" onChange={handleUploadProfileImg} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"color-red text-bold clickable\" onClick={handleRemoveCurrentProfileImg}>\r\n\t\t\t\t\tRemove Current Photo\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"clickable\" onClick={handleChangeProfileImgToggle}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { userCollection } from 'fbase';\r\n\r\n// Import components\r\nimport Header from 'components/Header';\r\nimport ProfileImgOptions from 'components/ProfileImgOptions';\r\n\r\nexport default function AccountEdit({ isLoggedIn, currentUserObject, refreshCurrentUserObject }) {\r\n\tconst currentUserDocRef = doc(userCollection, currentUserObject.userId);\r\n\r\n\t// States\r\n\tconst [nameEdit, setNameEdit] = useState(currentUserObject.name);\r\n\tconst [bioEdit, setBioEdit] = useState(currentUserObject.bio);\r\n\tconst [isEditting, setIsEditting] = useState(false);\r\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\r\n\tconst [isProfileImgOptionsDisplayed, setIsProfileImgOptionsDisplayed] = useState(false);\r\n\r\n\t// Handlers\r\n\tconst handleChangeProfileImgToggle = () => {\r\n\t\tdocument.body.classList.toggle('scroll-locked');\r\n\t\tsetIsProfileImgOptionsDisplayed((prev) => !prev);\r\n\t};\r\n\r\n\tconst handleEditChange = (e) => {\r\n\t\tconst {\r\n\t\t\ttarget: { name, value },\r\n\t\t} = e;\r\n\r\n\t\tsetIsEditting(true);\r\n\t\tsetIsSubmitted(false);\r\n\r\n\t\tswitch (name) {\r\n\t\t\tcase 'name':\r\n\t\t\t\tsetNameEdit(value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bio':\r\n\t\t\t\tsetBioEdit(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleEditSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (isEditting) {\r\n\t\t\tawait updateDoc(currentUserDocRef, {\r\n\t\t\t\tname: nameEdit.trim(),\r\n\t\t\t\tbio: bioEdit.trim(),\r\n\t\t\t});\r\n\r\n\t\t\tawait refreshCurrentUserObject(currentUserObject.userId);\r\n\r\n\t\t\tsetIsEditting(false);\r\n\t\t\tsetIsSubmitted(true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn isLoggedIn ? (\r\n\t\t<>\r\n\t\t\t<Header currentUserObject={currentUserObject} />\r\n\t\t\t<div className=\"account-edit-container\">\r\n\t\t\t\t<form onSubmit={handleEditSubmit} className=\"account-edit-form\">\r\n\t\t\t\t\t<div className=\"form-header\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"profile-img\" style={{ backgroundImage: `url(${currentUserObject.profileImgUrl})` }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"username\">{currentUserObject.username}</span>\r\n\t\t\t\t\t\t\t<span className=\"change-profile-img-btn\" onClick={handleChangeProfileImgToggle}>\r\n\t\t\t\t\t\t\t\tChange Profile Photo\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" placeholder=\"Name\" className=\"form-input\" value={nameEdit} onChange={handleEditChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label htmlFor=\"bio\">Bio</label>\r\n\t\t\t\t\t\t<textarea name=\"bio\" placeholder=\"Bio\" className=\"form-input\" value={bioEdit} onChange={handleEditChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"submit-btn-container\">\r\n\t\t\t\t\t\t<input type=\"submit\" className={`submit-btn ${isEditting ? 'active' : ''}`} value=\"Submit\" />\r\n\t\t\t\t\t\t{isSubmitted && <div>Profile saved!</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t{isProfileImgOptionsDisplayed && (\r\n\t\t\t\t<ProfileImgOptions\r\n\t\t\t\t\thandleChangeProfileImgToggle={handleChangeProfileImgToggle}\r\n\t\t\t\t\tcurrentUserDocRef={currentUserDocRef}\r\n\t\t\t\t\trefreshCurrentUserObject={refreshCurrentUserObject}\r\n\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t) : (\r\n\t\t<Redirect to=\"/\" />\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { postCollection } from 'fbase';\r\nimport { doc, onSnapshot } from 'firebase/firestore';\r\n\r\n// Import components\r\nimport Post from 'components/Post';\r\nimport Header from 'components/Header';\r\nimport UserList from 'components/UserList';\r\n\r\nexport default function PostPage({ isLoggedIn, currentUserObject, userList, setUserList, isUserListDisplayed, toggleUserListDisplayed }) {\r\n\t// States\r\n\tconst [isPostDataReady, setIsPostDataReady] = useState(false);\r\n\tconst [postObject, setPostObject] = useState({});\r\n\r\n\t// Constants\r\n\tconst postId = useParams().postId;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = onSnapshot(doc(postCollection, postId), (doc) => {\r\n\t\t\tconst post = {\r\n\t\t\t\tid: doc.id,\r\n\t\t\t\t...doc.data(),\r\n\t\t\t};\r\n\r\n\t\t\tsetPostObject(post);\r\n\t\t\tsetIsPostDataReady(true);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tunsubscribe();\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn isLoggedIn ? (\r\n\t\tisPostDataReady ? (\r\n\t\t\t<>\r\n\t\t\t\t<Header currentUserObject={currentUserObject} />\r\n\t\t\t\t<div className=\"post-page-container\">\r\n\t\t\t\t\t<Post\r\n\t\t\t\t\t\tpostObject={postObject}\r\n\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isUserListDisplayed && <UserList toggleUserListDisplayed={toggleUserListDisplayed} userList={userList} />}\r\n\t\t\t</>\r\n\t\t) : (\r\n\t\t\t'Loading...'\r\n\t\t)\r\n\t) : (\r\n\t\t<Redirect to=\"/\" />\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n// Import components\r\nimport UserPage from 'routes/UserPage';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport AccountEdit from 'routes/AccountEditPage';\r\nimport PostPage from 'routes/PostPage';\r\n\r\nexport default function AppRouter({\r\n\tisLoggedIn,\r\n\tcurrentUserObject,\r\n\trefreshCurrentUserObject,\r\n\tuserList,\r\n\tsetUserList,\r\n\tisUserListDisplayed,\r\n\ttoggleUserListDisplayed,\r\n}) {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<Auth isLoggedIn={isLoggedIn} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path=\"/home\">\r\n\t\t\t\t\t<Home\r\n\t\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\tuserList={userList}\r\n\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t\tisUserListDisplayed={isUserListDisplayed}\r\n\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/user/:username\">\r\n\t\t\t\t\t<UserPage\r\n\t\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\tuserList={userList}\r\n\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t\tisUserListDisplayed={isUserListDisplayed}\r\n\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/account/edit\">\r\n\t\t\t\t\t<AccountEdit isLoggedIn={isLoggedIn} currentUserObject={currentUserObject} refreshCurrentUserObject={refreshCurrentUserObject} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/post/:postId\">\r\n\t\t\t\t\t<PostPage\r\n\t\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\t\tcurrentUserObject={currentUserObject}\r\n\t\t\t\t\t\tuserList={userList}\r\n\t\t\t\t\t\tsetUserList={setUserList}\r\n\t\t\t\t\t\tisUserListDisplayed={isUserListDisplayed}\r\n\t\t\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './AppRouter';\nimport { authService, userCollection } from 'fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { doc, getDoc } from 'firebase/firestore';\nimport 'App.css';\n\nfunction App() {\n\tconst [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [currentUserObject, setCurrentUserObject] = useState(null);\n\tconst [userList, setUserList] = useState({ listName: '', users: [] });\n\tconst [isUserListDisplayed, setIsUserListDisplayed] = useState(false);\n\n\tconst toggleUserListDisplayed = () => {\n\t\tsetIsUserListDisplayed((prev) => !prev);\n\t\tdocument.body.classList.toggle('scroll-locked');\n\t};\n\n\tconst refreshCurrentUserObject = async (currentUserId) => {\n\t\tconst userDocSnap = await getDoc(doc(userCollection, currentUserId));\n\t\tconst userObjectFirestore = userDocSnap.data();\n\t\tsetCurrentUserObject(userObjectFirestore);\n\t};\n\n\tuseEffect(() => {\n\t\tonAuthStateChanged(authService, async (user) => {\n\t\t\tif (user) {\n\t\t\t\tawait refreshCurrentUserObject(user.uid);\n\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t}\n\n\t\t\tsetIsFirebaseReady(true);\n\t\t});\n\t}, []);\n\n\treturn isFirebaseReady ? (\n\t\t<>\n\t\t\t<AppRouter\n\t\t\t\tisLoggedIn={isLoggedIn}\n\t\t\t\tcurrentUserObject={currentUserObject}\n\t\t\t\trefreshCurrentUserObject={refreshCurrentUserObject}\n\t\t\t\tuserList={userList}\n\t\t\t\tsetUserList={setUserList}\n\t\t\t\tisUserListDisplayed={isUserListDisplayed}\n\t\t\t\ttoggleUserListDisplayed={toggleUserListDisplayed}\n\t\t\t/>\n\t\t</>\n\t) : (\n\t\t'Loading...'\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}